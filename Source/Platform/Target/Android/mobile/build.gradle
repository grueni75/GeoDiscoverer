apply plugin: 'com.android.application'

def computeVersionName() {
    def date = new Date()
    return date.format('yyyyMMdd')
}

ext {
    supportLibVersion = '27.1.0'
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion "28.0.3"
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.untouchableapps.android.geodiscoverer"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 28
        versionName computeVersionName()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            project.ext.set('releaseAppABI', 'all32')
        }
        debug {
            project.ext.set('debugAppABI', 'armeabi-v7a')
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "GeoDiscovererMobile${variant.name.capitalize()}${variant.versionName}.apk";
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(':wear')
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:gridlayout-v7:${supportLibVersion}"
    implementation project(':core')
    implementation project(':colorPickerPreference')
    implementation 'com.google.android.gms:play-services-wearable:11.8.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    def acraVersion = '5.2.1'
    implementation "ch.acra:acra-mail:$acraVersion"
    implementation "ch.acra:acra-notification:$acraVersion"
    implementation 'org.apache.commons:commons-text:1.6'
}

task collectAssets(type: Exec) {
    workingDir 'src/main'
    commandLine '../../../collect_assets', 'mobile'
}
preBuild.dependsOn collectAssets

android.buildTypes.all { buildType ->
    def setNativeCodeConfigTask = task("set${buildType.name.capitalize()}NativeCodeConfig", type: Exec) {
        commandLine 'echo', "${buildType.name}"
        doFirst {
            standardOutput = new FileOutputStream("core/src/main/mode.txt");
        }
    }
    def resetNativeCodeConfigTask = task("reset${buildType.name.capitalize()}NativeCodeConfig", type: Exec) {
        commandLine 'echo', "all"
        doFirst {
            standardOutput = new FileOutputStream("core/src/main/mode.txt");
        }
    }
    tasks.whenTaskAdded { task ->
        if (task.name == "check${buildType.name.capitalize()}Manifest") {
            task.dependsOn setNativeCodeConfigTask
        }
        if (task.name == "compile${buildType.name.capitalize()}Ndk") {
            task.dependsOn resetNativeCodeConfigTask
        }
    }
}


